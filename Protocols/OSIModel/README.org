#+TITLE: OSI Model

OSI: Open Systems Interconnection model.

Why do we need a communication model?
- Agnostic applications
  - Without a standard model, your application must have knowledge of the
    underlying network medium
  - Imagine if you have to author different version of your applications so that it
    works on wifi vs ethernet vs LTE vs fiber
- Network Equipment Management
  - Without a standard model, upgrading network equipment becomes difficult
- Decoupled Innovation
  - Innovations can be done in each layer separately without affecting the rest
    of the model

What is the OSI Model?
- 7 Layers each describe a specific networking component
- Layer 7: Application - HTTP/FTP/gRPC
- Layer 6: Presentation - Encoding, Serialization
- Layer 5: Session - Connection establishment, TLS
- Layer 4: Transport - UDP/TCP
- Layer 3: Network - IP
- Layer 2: Data link - Frames, Mac address Ethernet
- Layer 1: Physical - Electric signals, fiber or radio waves

The OSI Layers - an Example (Sender)
- Example sending a POST request to an HTTPS webpage
- Layer 7: Application
  - POST request with JSON data to HTTPS server
- Layer 6: Presentation
  - Serialize JSON to flat byte string
- Layer 5: Session
  - Request to establish TCP connection/TLS
- Layer 4: Transport
  - Sends SYN request target port 443
- Layer 3: Network
  - SYN is placed in IP packet(s) and adds the source/destination IPS
- Layer 2: Data link
  - Each packet goes into a single frame and adds the source/destination MAC
    addresses
- Layer 1: Physical
  - Each frame become a string of bits which are converted into either a radio
    signal (wifi), electric signal (ethernet), or light (fiber)

The OSI Layers - an Example (Receiver)
- Receiver computer receives the POST request the other way around
- Layer 1: Physical
  - Radio, electric, or light is received and converted into digital bits
- Layer 2: Data link
  - The bits from Layer 1 is assembled into frames
- Layer 3: Network
  - The frames from Layer 2 are assembled into IP packet
- Layer 4: Transport
  - The IP packets from Layer 3 are assembled into TCP segments
  - Deals with Congestion control/flow control/retransmission in case of TCP
  - If segment is SYN we don't need to go further into more layers as we are
    still processing the connection request
- Layer 5: Session
  - The connection session is established or identified
  - We only arrive at this layer when necessary (three way handshake is done)
- Layer 6: Presentation
  - Deserialize flat byte strings back to JSON for the applications to consume
- Layer 7: Application
  - Application understands the JSON POST request and your express json or
    apache request receive event is triggered

[[file:SendReceiveModel.png]]

It is also important to remember that the client is never directly connecting to
the server so a more accurate representation of the OSI model in action may look
like:

[[file:SendReceiveModel2.png]]

In the above example note that the switch only needs to go to Layer 2 whereas
the Router needs to go up to Layer 3. This is because a switch can direct
traffic using Mac Addresses, whereas a Router depends on IPs to route traffic.

Now if we take into account things like Firewalls, Proxies, Load Balancers, or
CDNs the following might also be an accurate depiction of the OSI model in
action:

[[file:SendReceiveModel3.png]]

The shortcomings of the OSI Model:
- OSI Model has too many layers which can be hard to comprehend
- Hard to argue about which layer does what
- Simpler to deal with Layers 5-6-7 as just one layer, application
- TCP/IP Model does that

TCP/IP Model:
- Much simpler than OSI Model as it has just 4 Layers
- Application (Layer 5, 6, and 7)
- Transport (Layer 4)
- Internet (Layer 3)
- Data link (Layer 2)
- Physical Layer is not officially covered in this model
